# DataSource Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/gbc_event_booking
spring.datasource.username=your_database_username
spring.datasource.password=your_database_password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Actuator Configuration
management.endpoints.web.exposure.include=*

# Time Zone Setting
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/approvalservice_db
spring.data.mongodb.database=approvalservice_dbs

# Logging Configuration
logging.level.org.springframework.web=INFO

# Keycloak Configuration
keycloak.auth-server-url=http://localhost:8080/realms/gbc
keycloak.realm=gbc
keycloak.resource=api-gateway
keycloak.credentials.secret=your-client-secret
keycloak.public-client=true
keycloak.use-resource-role-mappings=true

# OAuth2 Configuration (Keycloak)
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=your-client-secret
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/gbc/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/gbc/protocol/openid-connect/auth

# Spring Cloud Gateway Routing for ApprovalService
spring.cloud.gateway.routes[0].id=approval-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/approvals/**
spring.cloud.gateway.routes[0].filters[0]=KeycloakOAuth2LoginFilter
spring.cloud.gateway.routes[0].filters[0]=Role=staff
spring.cloud.gateway.routes[0].filters[1]=RequestRateLimiter=redis-rate-limiter.replenishRate=10,redis-rate-limiter.burstCapacity=10

# Example: Other routes (e.g., for BookingService)
spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=http://localhost:8081
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/bookings/**

# Secure Gateway (Optional: Example with specific paths for authentication)
spring.cloud.gateway.routes[1].filters[0]=SecureHeaders

resilience4j.circuitbreaker.instances.userservice.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userservice.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.userservice.slow-call-duration-threshold=2000
resilience4j.circuitbreaker.instances.userservice.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.userservice.sliding-window-size=5
resilience4j.circuitbreaker.instances.userservice.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.userservice.wait-duration-in-open-state=10000